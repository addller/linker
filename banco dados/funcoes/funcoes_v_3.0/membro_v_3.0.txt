--Obs.: pegar o _id_membro e o _db_key do status membro no banco de dados ->> muito importante
create or replace function registrarMembro(
    _nome character varying,    
    _nascimento date,
    _sexo char,
    _login_name character varying,
    _pass bytea,
    _email character varying    
    ) 
    returns table(_id_membro bigint, _db_key bigint) as
    $$
    	declare
    		newId bigint;
            db_key bigint;
    	begin
            insert into membro(login_name, pass, email, sexo, nascimento, nome)
            values(_login_name, _pass, _email, _sexo, _nascimento, _nome) returning membro.id, membro.db_key into newId, db_key;
            perform registrarAlbum(newId, 'perfil');
			return query select newId, db_key;         
		end
    $$
language plpgsql;
  
select registrarMembro('_nome', now()::Date, 'F', 'alra', '_pass', 'alra') as id;


--###################################################################################################


create or replace function _logar(
    _login_name character varying,
    _pass bytea
    ) 
    returns setof membro as
    $$
    	begin
            return query select * from membro where login_name = _login_name and pass = _pass limit 1;        
		end
    $$
language plpgsql;
select * from _logar('ana@mail', 'ana@mail') as membro;


--###################################################################################################

create or replace function _editarPerfil(
    _id_membro bigint,
    _nome character varying,    
    _nascimento date,
    _sexo char,
    _login_name character varying,
    _pass bytea,
    _old_pass bytea,
    _old_login_name character varying
    ) 
    returns setof membro as
    $$
    	begin
        	update membro set login_name = _login_name, pass = _pass, sexo = _sexo, nome = _nome, nascimento = _nascimento 
            	where id = _id_membro and login_name = _old_login_name and pass = _old_pass; 
            return query select * from membro where id = _id_membro and login_name = _login_name and pass = _pass; 
		end
    $$
language plpgsql;

select * from _editarPerfil(81,'ana@mail', now()::date, 'F','ana@mail','ana@mail','ana@mail','ana@mail');


--###################################################################################################


create or replace function _editarCadastroMembro(
    _id_membro bigint,
    _nome character varying,    
    _nascimento date,
    _sexo char,
    _pass bytea
    ) 
    returns boolean as
    $$
    	declare
        	_id bigint;
    	begin
        	select id into _id from membro where membro.id = _id_membro and membro.pass = _pass limit 1;
            if(_id is null) then
            return false;
            end if;
        	update membro set nome = _nome, sexo = _sexo, nascimento = _nascimento 
            	where id = _id_membro and pass = _pass; 
            return true;
		end
    $$
language plpgsql;



--###########################################################################################################


create or replace function _editarSenha(
    _id_membro bigint,
    _pass bytea,
    _old_pass bytea
    ) 
    returns boolean as
    $$
    	declare
            get_pass character varying;
    	begin
        	select pass into get_pass from membro 
            	where membro.id = _id_membro and pass = _old_pass limit 1;
            if(get_pass is not null) then
            	update membro set pass = _pass where id = _id_membro;
            	return true;
            end if;        	 
            return false;
		end
    $$
language plpgsql;


--####################################################################################################


create or replace function _editarLoginName(
    _id_membro bigint,
    _login_name character varying,
    _old_login_name character varying,
    _pass bytea
    ) 
    returns character varying as
    $$
    	declare
            get_login_name character varying;
            get_pass character varying;
    	begin
        	select login_name, pass into get_login_name, get_pass from membro 
            	where membro.id = _id_membro limit 1;
            if(get_login_name <> _old_login_name) then
            	return 'O nome de login esta errado';
            elsif(get_pass <> _pass) THEN
            	return 'A senha esta incorreta';
            end if;
            update membro set login_name = _login_name where membro.id = _id_membro;
            return 'SUCCES';            
		end
    $$
language plpgsql;


--####################################################################################################



create or replace function _consultarMembroMinByPostagemId(_id_postagem bigint)
	returns table(
        id_membro bigint, 
        nome_membro character varying, 
        total_inscritos bigint,
        data_inscricao date,
        is_suspenso boolean,
        imagem_membro bytea,
        has_image boolean
    ) as
    $$
		declare
        	get_id bigint;
        	get_nome character varying;
        	get_total_inscritos bigint;
        	get_data_inscricao date;
       		get_is_sustenso boolean;
        	get_imagem bytea;
    	begin
        	
        	select 
            	membro.id,
        		membro.nome::character varying,
        		membro.total_inscritos,
        		membro.data_inscricao,
       			membro.is_suspenso,
        		imagem.imagem
                	into
                		get_id,
        				get_nome,
        				get_total_inscritos,
        				get_data_inscricao,
       					get_is_sustenso,
        				get_imagem    
            	from postagem, membro, album, imagem 
                	where 
                    	postagem.id = _id_postagem
                        and membro.id = postagem.id_membro_postante
                        and album.id_proprietario = postagem.id_membro_postante
                        and album.nome_album = 'perfil'
                        and album.id = imagem.id_album limit 1;  
               	return query select get_id,
        				get_nome,
        				get_total_inscritos,
        				get_data_inscricao,
       					get_is_sustenso,
        				get_imagem, get_imagem is not null;  
        end
    $$
language plpgsql;

select * from _consultarMembroMinByPostagemId(127);

